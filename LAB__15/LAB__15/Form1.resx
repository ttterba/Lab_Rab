<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAdoAAAA4CAYAAABaHzmSAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAGLlJREFUeF7tnXlQVMfahxmGERFjxFxjotGrX9Sr5moWTIy5rsRoxJgrRk00riEu
        icYFtyCKilGDYtwialyS3IjBLRGImhJwQ0WFAhVELXdLQChEiqVkaubU8x2YQbYRBpiBg/ZT1X9M1zCn
        ed+3+9fn7dN9bBAIBAKBQGA1hNAKBAKBQGBFhNAKBAKBQGBFhNAKBAKBQGBFhNAKBAKBQGBFhNAKBAKB
        QGBFhNDWCiTSonbi6zmTOd9t48Q9rbFeYUhpRO30xXPmHL7bdgKlNtNyZJEQtJYFs+ey9NczpEjGakEZ
        KNxmmafZ7BPAJZ3xs0LJPL0Zn4BLKLyZVUd7nfDffmb79u1s/3kHR2/Wzv9YCG0tIOu4J73eHsAY9xH0
        alUPTYvPCLijtBEqi+OevXh7wBjcR/SiVT0NLT4LQHHNtBha4n+exYylm9i8bAxvNmzAf3zjnv6Br0oo
        3WYZhE/vgENTdw48MlYpkYxwpndwoKn7AZTczKojkRzwJV3ffY/33nuP/7w/nX21dDYrhFbxZBD0wzpi
        sg2fpKSdDHvZnneXX0FvqFIGGUH8sC4GQzMlknYO42X7d1l+RVGttBz6e1yMS5H/0zy0nJ7djoaDA4z/
        v8AkCrdZxpGFTBr7Ma2aKVloMziycBJjP25Fs6ddaHWxLPvaj0tPwRAihFbxSOj1RWdxD9nqWp8uyxQm
        tJKe4s3cimv9Lix7WoW2GFpOznmfcXsLRERQPgqz2cNwvKf4czHsG1orWGgfhnszxf8iYd+0fuqF9sHe
        UbRu68K4eZs4cqt2/6dCaGsbuvN4v9sVnwvKTlLqznvzblcfFN5MC6AnNWIpg/67mMgMY5WgHJRms4eE
        eU9h42UduUcVLLQPw+TJwEYu63I5+tQLrZ5boRtZ5jmejzq+gKahM9OCE2vtRLZ2Cm3WWdaP/5QJG85V
        Pu2kTyEqJIzLOcbPZiIln+bP0KtU8M8sRsbh6Qz0CJOHBiWTweHpA/EIs2Yrszi7fjyfTtjAuSrkHvUp
        UYSEXTZ+qigSD6J/xevzbrRwUNPog/UUvYGv6VgpjbCZKdJDFzDZ/3L+WrFyhTad0AWT8ZcnA3Irq0Fo
        lRArRvRJHPJw5vlmo/mjyJCivP71ZGql0EoP/sbz/c70mXdYDr+KI6VFsNpjIX/crMxjsRL3w5bg7hHA
        lVxjVTUhpR3Ge/IaYhQdWRJph72ZvCbGuh1AesDfnu/Tuc88DlcmCPLaGbEaj4V/UKkwKIZEStAXtKrb
        hWWXi6bKay5WTCJsVpqMUGYMcMc/5CAHDx4kxM+NZo1dWRoSwZUM5dw/ZYTOYIC7PyFyGw8eDMHPrRmN
        XZcSEnEFqzRTUbEikxvJnI5tmXqs6I8prH+VwbOXOs6JwtfVlSUxVZkL6rmxZTDvjtvN3erqi9mxbPHy
        42iaspMn2bFb8PI7isKbKYeBL66uS6hSGBQlN5RJr3bH93rJNekaiBUr8TTaTEoKwnvsSEaONJTPP+xA
        A8e29Bn1LYE3SrarppBICvJmrLGNI0d+zocdGuDYtg+jvg1EMc0sgsVjhWx2DO3O4riSa1G1o389Y0Kb
        RcScN2n9RTBVXhrSxbGkSzMGbrkpu9rKZMXy00wvAi4kkpSUROKtWPat2sZp6+WNKkVW7E/M9ArgQmKS
        3M5EbsXuY9W208pbR8qKYM6brfki2HILhNLtjXzy0SoSTAVDdcaKtXhGbKboNdrHKHyN1iKxkkvy1Rs8
        MDpfSg1i5qQtpicVtaB/KVho9WTdv8PdtBx5PqcjM6NEIlLK4n5KlvGDjC6dlAfG/IE+m5SkNB6VmOHo
        E3zp9lxzJvxtifDUc3NVDxyauxNizQc6cmPwc2mCWmWDjU1BUdN0XLA8bVAOuTF+uDRRo3rcRrmomzIu
        uGqt1Gfd587dNHJkX+oyM0qkoyU5RlKK2EFHesoDuYvmoSc7JYm0kkEg1yf4duO55hOoUhg8DGLy2870
        HTMT7wWzmTRhIftvP+nJr2qKFSPCZpXnWRNaxcZK7hGmtnagydvD8fDyYs58f06klrxWATUTKxVBkUIr
        pYTiPeh93CZM55sx/Xiz9Su0dQ/ODyrt9UOsnTmELs2fo9HwXSTG7mLpxP50fNGRTvPOcCPYkz7/dECl
        ssPJ2YMDjzc4azkxvQ2aBm7seJIzMhM4sGkJ00a60n/GfuOpNTruhMzH7b1eTN5T/Kk3beRs2mkaMGBr
        UrF6c8lMOMCmJdMY6dqfGfuN2xx0dwiZ78Z7vSazJ7Eyv2phKmgTiyGlEOo9iPfdJjD9mzH0k2fIr7R1
        J9gQBBxaO5MhXZrzXKPh7EqMZdfSifTv+CKOneZx5kYwnn3+iYNKhZ2TMx4Himwh0Z5gehsNDdx2PDGr
        YZ5fJDJuxXDqZCTnbz2ULVI2VY0VsxA2K4boX2Wg+FiR5TP9OlGnzhKfVP7TWNXSv6qAAoVWy7GpbXH2
        Pm/siBKJvw/nzS+CDLM3nZbcq9/TVaOi4fA9ZMmfs0K/oqVaTfOeI5g4/xeOxV3ixMr+vGirwXnRBcPv
        aE8zq50dmk7ziXlCD5dSTrNj9WLcuzZGXceZRRe0PDjsQY/XnWnX5B90W36x+OCQvo0BDiqeG7idNGOV
        +UiknN7B6sXudG2spo7zIi5oH3DYowevO7ejyT+6sfxieUOR9amwTSyE9thU2jp7c97441Li7wx/8wuC
        DEGANvcq33fVoGo4nD1Z8uesUL5qqUbdvCcjJs7nl2NxXDqxkv4v2qLJs63xd7SnZ9HOTkOn+TFPaLeV
        /FKlWDEPYbOiiP5VFiJWqhcFCm06W10daOiyirh8p8vIIrnK77AxZSGTE8iwBrb5QpuX6tDnC68dr04O
        L9zukxXI0Ia2OA4OyP+OlLgelzoq7PtuItXwjSci3fWnb30NnT1/YsHEVUQ/aUKVG8ZXLeTgazGJ0MeN
        K4L+ETm55c2vJO7696W+pjOePy1g4qpoRZ4uZLZNKoj+UQ6mTJS+1RWHhi6sKgwCTq/y43BhEBA4rAG2
        eQOBIQjyBwa7VycTXhgEBA5tiK3jYALyc2LypG29C3VU9vTdVG4UWNYv5cWKBXjmbCb6V7mI/qUMFCi0
        eq6s64OTrSyk7d2Y91s0qSVXuB/tZYSTulBob6ykm0ZDR6+owllUrjwDkw1v77o1fwuQ9sxcOtipqGcU
        3jKRbrG6pz2aJgPwv1rG8rr2DHM72KGq+xHbS+ZJdHGs6PE8mqafEpBc9mAg3VpNT3sNTQb4U9blahRz
        bVIBdHEr6PG8hqafBlDSRPor6+jjZCt39Pa4zfuN6NJBwN4RTqgfDwQ3WNlNg6ajF1GFQUDoVy1Q27uy
        NX+LgpYzcztgp6rHYMPIUCYW9UtZsWIhnimbif5VLqJ/KQdlPgwlpRO1ZRLdmtmjUqlxen0UG6KKWM8s
        oQ3n65ay0PbfYhDakx60lYXWwe03M2ZOOs55/huN0zACM41VptBdZNFbGmzq9GVjycOu9QmsdmmEffOR
        7Lpf9kCA7hye/9bgNCyQsi5Xs5hpkwqgT1iNSyN7mo/cRWkTSaRHbWFSt2bYq1SonV5n1IaoIus+5g0E
        4V+3lAeC/mwxDgQnPdrKA4EDbr+ZMX+2pF/KihWL8QzZTPSvchH9SzkoU2gLyLpKkM8g2tSTAyHvVJAH
        xvpKCK0u3gdnjQ32/TaXmzom5wy+gzvQWNOKKUfKyEPoovHqqEH13CfsNBlXevRmzNRyzvgyuENjNK2m
        UNblahRzbVJRZAOVbaIsrgb5MKhNPVTqZowuDIJKDAQ64n2c0djY029zuVFgWb+UGyuW5Fmxmehf5SL6
        lyJQoNDmcmTXPpIeT0ok7mx2paFdCyYVJN8rIbRk7eJTJ1s0nX2ILzPycji7YgY/Rv6MWwMNzj7x8m/K
        s7/k+3LolSD3MBObq9H8e16R4KsgOWdZMeNHIn92o4HGGZ94+YfkO/rk+6WuVoNUwCYWIvfILvYVBgHS
        nc24NrSjxaRQY01lBoK8MPgUJ1sNneX/oewwsLBfLBEr5SBsZgLRv0wiYqV6UaDQ5vC/Ye8w92RhMkF7
        fBqt6/fA75rRdTmBDG1gy3NDfjcIbcJ3vKOxo/2cMzw+oMu4Rlunj78hbSIlsrGfI+omYw2PsBdD4n7E
        Ntb/mcDNkDl86RdLrhxYft3r4OCyjhtXAliyMap00Kdu5sO6al4Zf6hiHUK6T8S29fyZcJOQOV/iF5sr
        x7Ef3es44LLuBlcClrAxylpdzFwqaRMLkfO/Ybwz92RhSkl7nGmt69PD75qxIofAoQ2wfW4IvxuCgO/e
        0WDXfg5nCoPAsIZUpw/+xtyZlLiRfo5qmow1bBcrhjX9UtlYqQDCZkZE/yoXESvVizKF9r91UTu9wWde
        69m+bSXje3dh6Ppo8jZO6++d4rcF/WiqtkH9cl/mrlzL8vHO1FepqPvaKH7Yc47EO5H87juMNhoVto26
        M2PLEW5oJZJ/HoRTnc7y7KnkXCsnf/Zma+tI2xG/cC1/RqQjfnlX6qmfp/2obVw2kdrIDZ1EC00bph2r
        oGtz8u7IbbF1bMuIX64Z7sJ18SzvWg/18+0Zte2yHMI1TeVsYily/vdf6qqdeOMzL9Zv38bK8b3pMnQ9
        0YYg4NRvC+jXVI2N+mX6zl3J2uXjca6vQlX3NUb9sIdziXeI/N2XYW00qGwb0X3GFo7ckEcIKZmfBzlR
        x1Rmw4p+qXSsVABhMyOif5WLiJXqRYFCq+fu1aukJF3mTFgIQQdOcOm+hSIu5ySzX3ueXqtLH9WlT73I
        0RNXeFiYTZFneUnERFws/dRzPnkvrm7PC303VOKsUT2pF49y4spDeV5biDYphoiLqWWnXKqRitvEcujv
        XuVqShKXz4QREnSAE5fuW2xwzDk5m9ee78Xqm6WiwEp+qUqsmI+wWQGif5WHiJXqRdkPQ1mBh+HTeeOt
        WUTkpUOqQvp+xnX8gDUJ+fMyQa3iIeHT3+CtWRHyfUU1UNlYkbRkZz1SiDDUEpsJFEBtiRUJbXYWj6qh
        gz1zQpu3rnBp82cMnHes8u90le7zl8cnTAtW5nFfAjPIvcTmzwYy75iV3+xbhVjRX19Bj06ziXy8JlbD
        1AKbCRRCbYgV/XVW9OjE7GroYE8QWonE0wGs9Z7C564fMivY+EiZjP72Dtx79Mf7iJUNaFW03AxaycIN
        R0is6Gwm+zIha5eyOSJVDAK1He1NglYuZMORRGOFhalirChOaPNQuM0ECkLpsVLzQqvjSsgG/BYMpb2D
        LS98vu9xCsBwooiGlpOPmMjp67kb+Sd7du9md5llL8ev1/yitZSZRsELf8ylMn8jUDISmWkFewctS1Vj
        RZFCm49ybSZQGgqOlZoXWiNSEhv62KP5zwqKvps5+68pjNl418QsQsuZ9V8y6vELip9UxrEstDbfEQsE
        1ke5QisQPAUoRmjle9YD7k3RtPXgZEFbpHv8Nm0OwVaYpCQnJzNkyBBRKlF8fX2NVixAR/zupSz09sa7
        zOLDL2cL3zhZwOLFi01eRxTLlF9//dVo6QJM+Gv6h7R6uTsTFhSpe4K/tm3bZvI6olimrFixwmjpAqrW
        v5YuXWryOqJYpnh6ehotXYgufjdLFxb1zXQ+bPUy3ScsKFLnjc8vZ/O3klqScoRWR7RXRzT/GM3+/Eyv
        RMr+uczYYeputupkZWWZSDOLYk45deqU0YoF6Ej4cxXLly1jWZnFl535m+eKc+zYMZPXEcUy5cKFC0ZL
        F1DaX0vnDuTVpr2Z8l35/oqNjTV5HVEsUyzdvyIiIkxeRxTLlPDwcKOlC9El/Mmq5UV8s3QuA19tSu8p
        3xXx1zJ8dxrObLAk5QitxL11valjPGJLSglh/uyd3Hmiymo5uXIEbm5u5ZSheB8ofMBKIBCURqSOBQIr
        opzUMeQEDqNBnS4sS7jN7m+9+KPI+ZilkUiKPkhIcDDBZZa/iLwlnngQCMpCCK1AYEWUJLS5R6fQqk4r
        3CZN47vwB1ZJGQsEgtIIoRUIrEhFhPZREnHRV3lQbDvoI5LiorlavNLEd7XlC63+0hI612lE75XnFXlY
        s0DwtCKEViCwImYLrZZTs/6V/57d3mtuPb7Z1J6axb/y3nHeew23Ht+Blv6uNmKGGXe00YsZMn4fieJW
        ViAQCASCiqFLLlto9bf3Mmfyj5yvlgMrFYg+jfjDv7P1p20Ehl4ireQpUtrbHN+1n9gHYhZS7UgPuRwW
        yNbNWwkMu0x6MRdouX18F/tjxVKHMpFIjdzJxuBLRQ69ET5THLpMUpOTSEoqKMmkZRnOE9bePs6u/bGI
        oc88Sgmt7kYQvsv3EB25gS+HexOe9mxaUkoKweOdF7BT2WBjIxeVmkadp/LnnQK1lbjn35f6cn3Lr8Mt
        9uYLgRlkR+H3YUsaN3uFFx3tUKk0NHNdy3nj2oZ0z5++9VWoW35NuHCM4pCS9zCquRr7/lso2HsgfKY0
        9Fxa/h4OBeNfXrFrzZTw7Dxn4d+3Pip1S74Wziqf7BslhVbH2W9fk8WlLq98sJDwlGd0uiIls2NYe7q4
        +7H7aCQnD2xmWvcmaFS2NPzgR+MpWTouLnJGY6PCcXBA9bylQiCTzXEfd7wP3smf3Ejp5/hhQFPUqgYM
        2GI4WFx3cRHOGhtUjoMJEI5RFnLf2jO6DY72qmJCK3ymMDIOMMllMPOK7C/9flM49/LGPt1FFjlr5JsP
        RwYLZ5WL/m6sidRx5nXORd2y+Ibd2oSUtA2PeUeKv90n6zjT22lQ1emOn/E9i6mb+mFvo6b5xMPijra6
        0N/k7Lnib+rQRXnRUaPh9QUx8vRHJnUT/extUDefyGHhGAUhkbx7LL2/9Gbc/9kVE1rhMyWh58a6AfT3
        u/qEVzSmsqmfPTbq5kwUzjKLch+GehaRHt7hTvFFPxktJz3aYqd5A+9YwzrFo/2jaWyrwXlxnGGAF9QI
        +mu+vFevHTMjjJ3+0X5GN7ZF47yYOOEYxSAl7WJM78kcvH+Mqa+WEFrhM+WQc5Rv/tWGIav2c/aOqTvW
        R+wf3RhbjTOLhbPMQgit2eQdR9kJzQufsTvDUKM9O5cOdvb032Kdt1MIzEHilv8nuBR9v7D2LHM7GAZy
        4RmFICUROMaFb/6WpVV7vLTQCp8pBIm7Wz6ioa1hXValceI1N2+Crhe9c9Vydm4H7PJODBTOMgshtOYi
        JbKx3/O0nhz2OK0u3V1D77ovMS5E7DCuGTJJCJxKlxbOjP/1PMb5T55jWNO7Li+NCxF7vxWBRGLgaFym
        hhomQ6aEVvhMMeTcv8aFyFB2+3sz5j/NqKtSYfdyP1bHFnhGFuM1van70jjE0GceQmjNRBu7iHdeHU5g
        0SMoc3YxrFEnvKJF+qTa0V7hj4Wj6dm6oeHJcFsneq44L8+188hh17BGdPKKFil9BSAl/s7o96cTVpBy
        MCW0wmfKRHrIuTUf01yjwuFtHy4YnZOzaxiNOnkhhj7zEEJrDtpLrO7fha/+SpHnckWQB4xpHfryY5nn
        PwusivSAqE3DaWuvwrbx5+zNzKvUcnxaB/r+WPyhKUENIN1j56g+eBx5nG94gtAKnymXTI5Ma4dG04n5
        RmXVHp9Gh74/IoY+8xBCWy4POT5/IMP840s/Way/hu+AsewT6ZMaJou/J7ZErXmLhRfzBgI913wHMFY4
        psbJOeDOP1v2YszEiUwsKOPdeKOhLXYtXXCfOJnvD92Xvyl8pmTyHzi0f5GxwQb/5H0eMHafSPObiRDa
        MnlEnP9oPl12unD9rxiZBHzrzWlxFm2Nk7N3BE72PVl92zDFzgz4Fm/hmBonO2wJQ0u+JnNQL9rWt0Xd
        tDMD3YYwd29i/neFzxRMTiBDnd5ggXHHhewsvvU+bVyqEZSHENonkkvC9i/5bOFRih+OJYvvoTDjoRUS
        qbfvkp1fL6g5JFK2fkSjzj7k39Dm1aTe5q5wjDIxmToWPlMy2nOevNPze+IL1mSlVG4LZ5mNEFqTZHNh
        gxtt2vRhvMdMZs40lumTGf3ha7z2ZYjhyWMpnesxcSSK/Ek1ksmt2GiupxdupdfdDWLS252ZEVowbEuk
        X48hTjhGmZgUWuEzRZAbxbqxQ/hq7XGSjaKqS/wbz4GDWRVbuKdWSr9OTFyiSB2biRDaUui57O/KS2pV
        4RmfRYu6ORMO5QVc3lnHH+CoUtNqylFxMlQ1ob+ygm4OKmwdXuZ1l0EMcetHD5fhLAtLenyKTd65uR84
        qlC3msJR4RjlYUJohc8UQs5x5nSsh0oe1xq26clHH3+E66ezCIgvcvead9bxB46o1K2YIpxlFkJoq8Kj
        20QeCif+GX3xQs0gkXnzDIeD/uDPv8KIvJJmYp3oEbcjDxEenyZ/W1A7ED5TDDl3iTocxP4Dx4i5k2XS
        H49uR3IoPL7EsprgSQihFQgEAoHAigihFQgEAoHAigihFQgEAoHAasD/A1B4biz5ugHBAAAAAElFTkSu
        QmCC
</value>
  </data>
</root>